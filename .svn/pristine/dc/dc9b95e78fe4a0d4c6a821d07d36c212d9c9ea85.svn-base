package com.oa.dao.impl;

import static org.hamcrest.CoreMatchers.endsWith;

import java.util.List;
import java.util.Map;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.oa.dao.Tb_Social_InsuranceDao;
import com.oa.entity.Tb_company;
import com.oa.entity.Tb_customer;
import com.oa.entity.Tb_sms_template;
import com.oa.entity.Tb_social_insurance;
@Repository
public class Tb_Social_InsuranceDaoImpl implements Tb_Social_InsuranceDao{
	@Autowired
	private SessionFactory sessionFactory;

	@Override
	public List<Tb_social_insurance> sheBaoList(StringBuffer hql,Integer pageNow,Integer pageSize,Map<String,Object> map) {
		
		List<Tb_social_insurance> list = sessionFactory.getCurrentSession()
				.createQuery(hql.toString())
				.setProperties(map)
				.setFirstResult((pageNow-1)*pageSize)
				.setMaxResults(pageSize)
				.list();
		return list;
	}

	public SessionFactory getSessionFactory() {
		return sessionFactory;
	}

	public void setSessionFactory(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}

	@Override
	public Long sheBaoCount() {
		String hql="select count(1) from Tb_social_insurance";
		Long count =(Long) sessionFactory.getCurrentSession().createQuery(hql).uniqueResult();
		return count;
	}

	@Override
	public void addSheBao(Tb_social_insurance tb_social_insurance) {
		// TODO Auto-generated method stub
		sessionFactory.getCurrentSession().save(tb_social_insurance);	
	}

	@Override
	public void delSheBao(Integer id) {
		Tb_social_insurance tb = (Tb_social_insurance) sessionFactory.getCurrentSession().get(Tb_social_insurance.class, id);
		sessionFactory.getCurrentSession().delete(tb);
	}

	@Override
	public void upSheBao(Tb_social_insurance tb_social_insurance) {
		// TODO Auto-generated method stub
		sessionFactory.getCurrentSession().update(tb_social_insurance);
	}

	@Override
	public Tb_social_insurance sheBaoById(Integer id) {
		// TODO Auto-generated method stub
		Tb_social_insurance tb_social_insurance = (Tb_social_insurance) sessionFactory.getCurrentSession().get(Tb_social_insurance.class, id);
		return tb_social_insurance;
	}

	@Override
	public Tb_customer keHuByIdCard(String idCard) {
		// TODO Auto-generated method stub
		String hql="from Tb_customer where idCard=:idCard";
		Tb_customer tb_customer = (Tb_customer) sessionFactory
				.getCurrentSession()
				.createQuery(hql)
				.setString("idCard", idCard)
				.uniqueResult();
		return tb_customer;
	}

	@Override
	public List<Tb_company> gongSiList() {
		String hql="from Tb_company";
		List<Tb_company> list = sessionFactory.getCurrentSession().createQuery(hql).list();
		return list;
	}

	@Override
	public List<Tb_customer> keHuList() {
		String hql="from Tb_customer";
		List<Tb_customer> list = sessionFactory.getCurrentSession().createQuery(hql).list();
		return list;
	}

	@Override
	public Tb_customer keHuById(Integer id) {
		Tb_customer tb_customer = (Tb_customer) sessionFactory.getCurrentSession().get(Tb_customer.class, id);
		return tb_customer;
	}

	@Override
	public List<Tb_sms_template> duanXinList(StringBuffer hql, Integer pageNow, Integer pageSize,
			Map<String, Object> map) {
		List<Tb_sms_template> list = sessionFactory.getCurrentSession().createQuery(hql.toString())
		.setFirstResult((pageNow-1)*pageSize)
		.setMaxResults(pageSize)
		.setProperties(map)
		.list();
		
		return list;
	}

	@Override
	public Long duanXinCount() {
		String hql="select count(1) from Tb_sms_template";
		Long count = (Long) sessionFactory.getCurrentSession().createQuery(hql).uniqueResult();
		return count;
	}

	@Override
	public Tb_sms_template duanXinById(Integer id) {
		Tb_sms_template tb_sms_template = (Tb_sms_template) sessionFactory.getCurrentSession().get(Tb_sms_template.class, id);
		return tb_sms_template;
	}
	
	

}
